# Copyright (c) 2012 - The IBus Cangjie authors
#
# This file is part of ibus-cangjie, the IBus Cangjie input method engine.
#
# ibus-cangjie is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ibus-cangjie is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ibus-cangjie.  If not, see <http://www.gnu.org/licenses/>.


gettext_package = '@GETTEXT_PACKAGE@'
localedir = '@LOCALEDIR@'
datadir = "@PKGDATADIR@"


class Config(object):
    def __init__(self, bus, engine, on_value_changed_cb, read_only=True):
        if self.__read_only not in (True, False):
            raise ValueError("Argument 'read_only' must be a boolean")

        self.__config_section = "engine/%s" % engine.capitalize()

        self.__ibus_config = bus.get_config()
        self.__ibus_config.connect("value-changed", on_value_changed_cb, None)

        self.__read_only = read_only

    def read(self, name):
        return self.__ibus_config.get_value(self.__config_section, name)

    def write(self, name, v):
        if self.__read_only:
            raise ValueError("Can't change the configuration if opened "
                             "read-only")
        return self.__ibus_config.set_value(self.__config_section, name, v)
